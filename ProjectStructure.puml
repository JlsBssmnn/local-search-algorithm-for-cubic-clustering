@startuml ScienceProject
package geometry {
  Class Vector {
    X,Y,Z
    getLength()
    scalarMultiplication()
    addVector()
    Equal()
  }

  Class Utils {
    DistanceFromPlane()
  }

  Class VectorGenerator {
    randomVector()
    randomUnitVector()
    samplePointFromPlane(noise)
  }
}

package algorithm {
  Class CostCalc {
    CubicPartitionCost(partition)
  }

  Class GreedyJoining {

  }

  Class GreedyMoving {

  }
}

package evaluation {
  Class Evaluater {
    evaluate(algorithm, testData): planes
  }

  Class TestData {
    numOfPlanes
    planes
    points
  }

  Class TestDataGenerator {
    generateData(numOfPlanes, pointsPerPlane)
  }
}

package utils {
  Class NormalDist {
  }

  Class Utilities {
    RandomFloat()
    RandomInt()
    FloatFromNormalDist()
  }
}
@enduml