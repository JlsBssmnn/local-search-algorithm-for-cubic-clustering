@startuml ScienceProject
package geometry {
  Class Vector {
    X,Y,Z
    getLength()
    scalarMultiplication()
    addVector()
    Equal()
  }

  Class Utils {
    DistanceFromPlane()
    CoordinateReprToNormalVec()
  }

  Class VectorGenerator {
    randomVector()
    randomUnitVector()
    samplePointFromPlane(noise)
  }
}

package partitioning3D {
  package evaluation {
    Class Evaluater {
      evaluate(algorithm, testData): planes
    }

    Class TestData {
      numOfPlanes
      planes
      points
    }

    Class TestDataGenerator {
      generateData(numOfPlanes, pointsPerPlane)
    }
  }
  
  Class CostCalculator {
    TripleCost()
    GetMaxDist()
  }

  Class Output {
    numberOfPlanes
    planes
  }

  Class Partitioning3D {
    createOutput(partitioning)
    fitPlane()
  }
}

package algorithm {
  Class CubicPartitioning {
    CubicPartitionCost(partition)
  }
  Class GreedyJoining {

  }

  Class GreedyMoving {

  }
}



package utils {
  Class NormalDist {
  }

  Class Utilities {
    RandomFloat()
    RandomInt()
    FloatFromNormalDist()
  }
}
@enduml